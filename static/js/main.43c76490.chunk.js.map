{"version":3,"sources":["Components/Stopwatch.jsx","App.js","reportWebVitals.js","index.js"],"names":["StopWatch","React","useState","time","setTime","timerOn","setTimeOn","useEffect","interval","setInterval","prevTime","clearInterval","id","className","Math","floor","slice","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAkEeA,MAhEf,WACE,MAAwBC,IAAMC,SAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA6BH,IAAMC,UAAS,GAA5C,mBAAOG,EAAP,KAAgBC,EAAhB,KAgBE,OAdFL,IAAMM,WACJ,WACE,IAAIC,EAAW,KASf,OARIH,EACFG,EAAWC,aAAY,WACrBL,GAAQ,SAAAM,GAAQ,OAAGA,EAAS,QAC5B,IAGFC,cAAcH,GAET,kBAAIG,cAAcH,MACzB,CAACH,IAGC,qBAAKO,GAAG,UAAR,SACA,sBAAKC,UAAU,QAAf,UACA,sBAAKD,GAAI,UAAT,UACI,kCAAS,IAAIE,KAAKC,MAAOZ,EAAO,IAAQ,KAAKa,OAAO,GAApD,OACA,kCAAS,IAAIF,KAAKC,MAAOZ,EAAO,IAAO,KAAKa,OAAO,GAAnD,OACA,gCAAS,IAAKb,EAAO,GAAK,KAAKa,OAAO,QAE1C,uBACA,sBAAKJ,GAAK,UAAV,WAESP,GAAoB,IAATF,GACV,wBAAQc,QAAS,kBAAIX,GAAU,IAA/B,mBAMFD,GACE,wBAAQY,QAAS,kBAAMX,GAAU,IAAjC,mBAIDD,GAAoB,IAATF,GAEV,wBAAQc,QAAS,kBAAIX,GAAU,IAA/B,qBAIDD,GAAWF,EAAO,GACjB,wBAAQc,QAAS,kBAAIb,EAAQ,IAA7B,sBAQR,6BChDKc,MANf,WACI,OACE,qBAAKL,UAAU,MAAf,SAAqB,cAAC,EAAD,OCMZM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.43c76490.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Stopwatch.css';\r\nfunction StopWatch() {\r\n  const [time, setTime] = React.useState(0);\r\n  const [timerOn, setTimeOn] = React.useState(false);\r\n\r\n  React.useEffect(\r\n    () =>{\r\n      let interval = null ;\r\n      if (timerOn){\r\n        interval = setInterval(()=>{\r\n          setTime(prevTime =>prevTime+10)\r\n        },10)\r\n      }\r\n      else{\r\n        clearInterval(interval);\r\n      }\r\n      return ()=>clearInterval(interval)\r\n    },[timerOn]\r\n  );\r\n    return (\r\n        <div id='wrapper'>\r\n        <div className=\"Timer\">\r\n        <div id =\"display\">\r\n            <span>{( \"0\"+Math.floor((time / 60000) %60)).slice(-2) }:</span>\r\n            <span>{( \"0\"+Math.floor((time / 1000) %60)).slice(-2) }:</span>\r\n            <span>{( \"0\"+(time / 10) %100).slice(-2) }</span>\r\n        </div>\r\n        <hr></hr>\r\n        <div id = \"buttons\">\r\n              {\r\n                !timerOn && time === 0 && (\r\n                  <button onClick={()=>setTimeOn(true)}>Start</button>\r\n\r\n                )\r\n              }\r\n\r\n              {\r\n                timerOn && (\r\n                  <button onClick={() => setTimeOn(false)}>Stop</button>\r\n                )\r\n              }\r\n              {\r\n                !timerOn && time !== 0 && (\r\n\r\n                  <button onClick={()=>setTimeOn(true)}>Resume</button>\r\n                )\r\n              }\r\n              {\r\n                !timerOn && time > 0 && (\r\n                  <button onClick={()=>setTime(0)}>Reset</button>\r\n\r\n                )\r\n              }\r\n              \r\n             \r\n\r\n          </div>\r\n          <hr></hr>\r\n    \r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StopWatch;\r\n","import './App.css';\nimport React from 'react';\nimport Stopwatch from './Components/Stopwatch';\n\nfunction App() {\n    return (\n      <div className=\"App\"><Stopwatch/></div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}