{"version":3,"sources":["Utils/Util.js","Components/Display/Display.jsx","Components/LapList/Lap.jsx","Components/LapList/LapList.jsx","Components/StopWatch/Stopwatch.jsx","App.js","reportWebVitals.js","index.js"],"names":["Utils","time","Math","floor","slice","Display","props","map","index","Lap","className","LapList","lap","StopWatch","useState","setTime","timerOn","setTimeOn","setLap","useEffect","interval","setInterval","prevTime","clearInterval","onClick","oldArray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAQgBA,MARhB,SAAeC,GAId,MAAO,EAHS,IAAIC,KAAKC,MAAOF,EAAO,IAAQ,KAAKG,OAAO,GAAG,KAC/C,IAAIF,KAAKC,MAAOF,EAAO,IAAO,KAAKG,OAAO,GAAG,KAC7C,IAAKH,EAAO,GAAK,KAAKG,OAAO,K,OCS9BC,MAVf,SAAiBC,GACf,OACE,8BACGN,EAAMM,EAAML,MAAMM,KAAI,SAACN,EAAMO,GAAP,OACrB,+BAAmBP,GAARO,SCYJC,MAff,SAAaH,GACT,OACI,8BAEI,sBAAKI,UAAW,UAAhB,UACI,2CAAcJ,EAAME,MAAM,EAA1B,SACA,cAAC,EAAD,CAASP,KAAMK,EAAML,OACzB,6BCRCU,EAAU,SAACL,GAAD,OAGrB,qBAAKI,UAAU,WAAf,SACGJ,EAAMM,IAAIL,KAAI,SAACN,EAAMO,GAAP,OACb,cAAC,EAAD,CAAiBP,KAAMA,EAAMO,MAAOA,GAA1BA,S,MC4DDK,MA/Df,WAEE,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA6BD,oBAAS,GAAtC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAsBH,mBAAS,IAA/B,mBAAOF,EAAP,KAAYM,EAAZ,KAoCA,OAZAC,qBAAU,WACR,IAAIC,EAAW,KAQf,OAPIJ,EACFI,EAAWC,aAAY,WACrBN,GAAQ,SAACO,GAAD,OAAcA,EAAW,QAChC,KAEHC,cAAcH,GAET,kBAAMG,cAAcH,MAC1B,CAACJ,IAGF,qBAAKN,UAAU,UAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CAAST,KAAMA,MAEjB,uBACA,sBAAKS,UAAU,UAAf,UACE,wBAAQc,QAxBI,WAClBP,GAAU,IAuBJ,mBACCD,GAAW,wBAAQQ,QA5BT,WACjBP,GAAU,IA2BQ,qBACVD,GAAW,wBAAQQ,QAjCR,WACnBP,GAAU,IAgCS,sBACb,wBAAQO,QAxCI,WAClBT,EAAQ,GACRE,GAAU,GACVC,GAAO,SAACO,GAAD,MAAc,OAqCf,qBACA,wBAAQD,QA7CE,WAChBN,GAAO,SAACO,GAAD,4BAAkBA,GAAlB,CAA4BxB,QA4C7B,sBAEF,uBACA,8BACE,cAAC,EAAD,CAASW,IAAKA,Y,MC5CTc,MAVf,WACI,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCGOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d794a9bc.chunk.js","sourcesContent":["function Utils(time){\r\n    const hh =  (\"0\"+Math.floor((time / 60000) %60)).slice(-2)+\":\";  \r\n    const mm = (\"0\"+Math.floor((time / 1000) %60)).slice(-2)+\":\"; \r\n    const ss = (\"0\"+(time / 10) %100).slice(-2);\r\n return [hh,mm,ss];\r\n }\r\n\r\n \r\n export default Utils;","import React from \"react\";\r\nimport Utils from \"../../Utils/Util\";\r\nfunction Display(props) {\r\n  return (\r\n    <div>\r\n      {Utils(props.time).map((time, index) => (\r\n        <span key={index}>{time}</span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React from 'react'\r\nimport Display from '../Display/Display'\r\n\r\nfunction Lap(props) {\r\n    return (\r\n        <div>\r\n            \r\n            <div className =\"display\">\r\n                <span>---Lap {props.index+1}---</span>\r\n                <Display time={props.time}></Display>\r\n            <hr></hr>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Lap\r\n\r\n","import React from \"react\";\r\nimport Lap from \"./Lap\";\r\nexport const LapList = (props) => (\r\n  \r\n\r\n  <div className=\"lap-list\">\r\n    {props.lap.map((time, index) => (\r\n      <Lap key={index} time={time} index={index}></Lap>\r\n    ))}\r\n  </div>\r\n  \r\n);\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Display from \"../Display/Display\";\r\nimport { LapList } from \"../LapList/LapList\";\r\nimport \"./Stopwatch.css\";\r\nfunction StopWatch() {\r\n  // using 3 hooks to manage state of timer and laplist\r\n  const [time, setTime] = useState(0);\r\n  const [timerOn, setTimeOn] = useState(false);\r\n  const [lap, setLap] = useState([]);\r\n\r\n  // This will add the current value of time to lap list\r\n  const handleLap = () => {\r\n    setLap((oldArray) => [...oldArray, time]);\r\n  };\r\n  // This will handle reset\r\n  const handleReset = () => {\r\n    setTime(0);\r\n    setTimeOn(false);\r\n    setLap((oldArray) => []);\r\n  };\r\n  // This will handle Resume\r\n  const handleResume = () => {\r\n    setTimeOn(true);\r\n  };\r\n  // This will handle Stop\r\n  const handleStop = () => {\r\n    setTimeOn(false);\r\n  };\r\n  const handleStart = () => {\r\n    setTimeOn(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    var interval = null;\r\n    if (timerOn) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 10);\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [timerOn]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"Timer\">\r\n        <div className=\"display\">\r\n          <Display time={time}></Display>\r\n        </div>\r\n        <hr></hr>\r\n        <div className=\"buttons\">\r\n          <button onClick={handleStart}>Start</button>\r\n          {timerOn && <button onClick={handleStop}> Stop </button>}\r\n          {!timerOn && <button onClick={handleResume}> Resume </button>}\r\n          <button onClick={handleReset}> Reset </button>\r\n          <button onClick={handleLap}> Lap </button>\r\n        </div>\r\n        <hr></hr>\r\n        <div>\r\n          <LapList lap={lap}></LapList>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StopWatch;\r\n","import './App.css';\nimport React from 'react';\n// import Stopwatch from './Components/Stopwatch/Stopwatch';\nimport Stopwatch from '../src/Components/StopWatch/Stopwatch';\nimport StopwatchClass from './Components/StopWatch/StopwatchClass';\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <Stopwatch/>\n        {/* <StopwatchClass/> */}\n        </div>\n\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}