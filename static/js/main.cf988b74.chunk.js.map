{"version":3,"sources":["Components/LapList/Lap.jsx","Components/LapList/LapList.jsx","Components/Stopwatch.jsx","App.js","reportWebVitals.js","index.js"],"names":["Lap","props","id","index","Math","floor","time","slice","LapList","className","lap","map","StopWatch","React","useState","setTime","timerOn","setTimeOn","setLap","useEffect","interval","setInterval","prevTime","clearInterval","onClick","oldArray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAoBeA,MAlBf,SAAaC,GACT,OACI,8BAEI,sBAAKC,GAAI,UAAT,UACA,wCAAWD,EAAME,MAAM,EAAvB,aAEA,kCAAS,IAAIC,KAAKC,MAAOJ,EAAMK,KAAO,IAAQ,KAAKC,OAAO,GAA1D,OACA,kCAAS,IAAIH,KAAKC,MAAOJ,EAAMK,KAAO,IAAO,KAAKC,OAAO,GAAzD,OACA,gCAAS,IAAKN,EAAMK,KAAO,GAAK,KAAKC,OAAO,KAC5C,6BCCCC,EAAU,SAAAP,GAAK,OAGpB,qBAAKQ,UAAU,WAAf,SAGIR,EAAMS,IAAIC,KAAI,SAACL,EAAKH,GAAN,OACV,cAAC,EAAD,CAAiBG,KAAMA,EAAMH,MAAOA,GAA1BA,S,MCqDXS,MAtEf,WAEE,IAKA,EAAwBC,IAAMC,SAAS,GAAvC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA6BF,IAAMC,UAAS,GAA5C,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,IAAMC,SAAS,IAArC,mBAAOJ,EAAP,KAAYQ,EAAZ,KAkBE,OAdFL,IAAMM,WACJ,WACE,IAAIC,EAAW,KASf,OARIJ,EACFI,EAAWC,aAAY,WACrBN,GAAQ,SAAAO,GAAQ,OAAGA,EAAS,QAC5B,IAGFC,cAAcH,GAET,kBAAIG,cAAcH,MACzB,CAACJ,IAGC,qBAAKd,GAAG,UAAR,SACA,sBAAKO,UAAU,QAAf,UACA,sBAAKP,GAAI,UAAT,UACI,kCAAS,IAAIE,KAAKC,MAAOC,EAAO,IAAQ,KAAKC,OAAO,GAApD,OACA,kCAAS,IAAIH,KAAKC,MAAOC,EAAO,IAAO,KAAKC,OAAO,GAAnD,OACA,gCAAS,IAAKD,EAAO,GAAK,KAAKC,OAAO,QAE1C,uBACA,sBAAKL,GAAK,UAAV,UACA,wBAAQsB,QAAS,WAAKP,GAAU,IAAhC,qBAIQD,GACE,wBAAQQ,QAAS,kBAAMP,GAAU,IAAjC,qBAIPD,GACC,wBAAQQ,QAAS,kBAAIP,GAAU,IAA/B,sBAMV,IAAI,wBAAQO,QAAS,kBAAIT,EAAQ,IAA7B,qBAjBE,MAiBoD,IAAM,IAC1D,wBAAQS,QApDI,WAChBN,GAAO,SAAAO,GAAQ,4BAAQA,GAAR,CAAkBnB,QAmD7B,sBAME,uBACF,8BACE,cAAC,EAAD,CAASI,IAAKA,YCvDTgB,MANf,WACI,OACE,qBAAKjB,UAAU,MAAf,SAAqB,cAAC,EAAD,OCMZkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf988b74.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Lap(props) {\r\n    return (\r\n        <div>\r\n            \r\n            <div id =\"display\">\r\n            <span>Lap {props.index+1}---></span>\r\n\r\n            <span>{( \"0\"+Math.floor((props.time / 60000) %60)).slice(-2) }:</span>\r\n            <span>{( \"0\"+Math.floor((props.time / 1000) %60)).slice(-2) }:</span>\r\n            <span>{( \"0\"+(props.time / 10) %100).slice(-2) }</span>\r\n            <hr></hr>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Lap\r\n\r\n","// import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\n// function LapList(props) {\r\n//     return (\r\n//         <div>\r\n            \r\n//         </div>\r\n//     )\r\n// }\r\n\r\nimport React from 'react'\r\nimport Lap from './Lap';\r\nexport const LapList = props =>(\r\n\r\n        \r\n        <div className='lap-list'>\r\n        {\r\n            \r\n            props.lap.map((time,index) => (\r\n                <Lap key={index} time={time} index={index}></Lap>\r\n                ))\r\n        \r\n        }\r\n        \r\n    </div>\r\n    \r\n    // else{\r\n    //     <div>\r\n    //         <h1>Laps goes here</h1>\r\n    //     </div>\r\n    // }\r\n);\r\n\r\n\r\n// export default LapList\r\n\r\n","import React from 'react';\r\nimport { LapList } from './LapList/LapList';\r\nimport './Stopwatch.css';\r\nfunction StopWatch() {\r\n\r\n  const handleLap = () =>{\r\n    setLap(oldArray => [...oldArray, time]);\r\n\r\n\r\n  }\r\n  const [time, setTime] = React.useState(0);\r\n  const [timerOn, setTimeOn] = React.useState(false);\r\n  const [lap, setLap] = React.useState([]);\r\n\r\n  // setTheArray(oldArray => [...oldArray, newElement]);\r\n\r\n  React.useEffect(\r\n    () =>{\r\n      let interval = null ;\r\n      if (timerOn){\r\n        interval = setInterval(()=>{\r\n          setTime(prevTime =>prevTime+10)\r\n        },10)\r\n      }\r\n      else{\r\n        clearInterval(interval);\r\n      }\r\n      return ()=>clearInterval(interval)\r\n    },[timerOn]\r\n  );\r\n    return (\r\n        <div id='wrapper'>\r\n        <div className=\"Timer\">\r\n        <div id =\"display\">\r\n            <span>{( \"0\"+Math.floor((time / 60000) %60)).slice(-2) }:</span>\r\n            <span>{( \"0\"+Math.floor((time / 1000) %60)).slice(-2) }:</span>\r\n            <span>{( \"0\"+(time / 10) %100).slice(-2) }</span>\r\n        </div>\r\n        <hr></hr>\r\n        <div id = \"buttons\">\r\n        <button onClick={()=>{setTimeOn(true);}}> Start </button> \r\n\r\n\r\n        {\r\n                timerOn && (\r\n                  <button onClick={() => setTimeOn(false)}> Stop </button> \r\n                )\r\n              }\r\n        {\r\n          !timerOn && (\r\n            <button onClick={()=>setTimeOn(true)}> Resume </button> \r\n          )\r\n        }\r\n\r\n\r\n\r\n{ \" \"}<button onClick={()=>setTime(0)}> Reset </button>   { \" \"}{ \" \"}\r\n        <button onClick={handleLap}> Lap </button>   \r\n\r\n               \r\n             \r\n\r\n          </div>\r\n          <hr></hr>\r\n        <div>\r\n          <LapList lap={lap}></LapList>  \r\n        </div>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StopWatch;\r\n","import './App.css';\nimport React from 'react';\nimport Stopwatch from './Components/Stopwatch';\n\nfunction App() {\n    return (\n      <div className=\"App\"><Stopwatch/></div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}